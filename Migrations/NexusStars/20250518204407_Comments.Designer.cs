// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusAstralis.Data;

#nullable disable

namespace NexusAstralis.Migrations.NexusStars
{
    [DbContext(typeof(NexusStarsContext))]
    [Migration("20250518204407_Comments")]
    partial class Comments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConstellationsStars", b =>
                {
                    b.Property<int>("constellation_id")
                        .HasColumnType("int");

                    b.Property<int>("star_id")
                        .HasColumnType("int");

                    b.HasKey("constellation_id", "star_id");

                    b.ToTable("ConstellationsStars");
                });

            modelBuilder.Entity("NexusAstralis.Models.Stars.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<string>("UserNick")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConstellationId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("NexusAstralis.Models.Stars.Constellations", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<double?>("area_degrees")
                        .HasColumnType("float");

                    b.Property<string>("brightest_star")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celestial_zone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("declination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discovery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecliptic_zone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("english_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("latin_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mythology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spanish_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK__constell__3213E83F34CE0D39");

                    b.ToTable("constellations", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("NexusAstralis.Models.Stars.Stars", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("_base")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("base");

                    b.Property<string>("absmag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("alt")
                        .HasColumnType("float");

                    b.Property<double?>("az")
                        .HasColumnType("float");

                    b.Property<string>("bayer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comp_primary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("con")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("decrad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmdec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmdecrad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmrarad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rarad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("var")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("var_max")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("var_min")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("x")
                        .HasColumnType("float");

                    b.Property<string>("x_gal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("y")
                        .HasColumnType("float");

                    b.Property<string>("y_gal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("z")
                        .HasColumnType("float");

                    b.Property<string>("z_gal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK__stars__3213E83F20EF987F");

                    b.ToTable("stars", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("constellation_stars", b =>
                {
                    b.Property<int>("constellation_id")
                        .HasColumnType("int");

                    b.Property<int>("star_id")
                        .HasColumnType("int");

                    b.HasKey("constellation_id", "star_id");

                    b.HasIndex("star_id");

                    b.ToTable("constellation_stars", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("NexusAstralis.Models.Stars.Comments", b =>
                {
                    b.HasOne("NexusAstralis.Models.Stars.Constellations", "Constellation")
                        .WithMany("Comments")
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");
                });

            modelBuilder.Entity("constellation_stars", b =>
                {
                    b.HasOne("NexusAstralis.Models.Stars.Constellations", null)
                        .WithMany()
                        .HasForeignKey("constellation_id")
                        .IsRequired()
                        .HasConstraintName("FK_constellation_stars_constellation");

                    b.HasOne("NexusAstralis.Models.Stars.Stars", null)
                        .WithMany()
                        .HasForeignKey("star_id")
                        .IsRequired()
                        .HasConstraintName("FK_constellation_stars_star");
                });

            modelBuilder.Entity("NexusAstralis.Models.Stars.Constellations", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
